From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: anhcraft <huynhduyanh123123@gmail.com>
Date: Fri, 2 Jun 2023 07:22:15 +0700
Subject: [PATCH] Update Usercache to match latest upstream version


diff --git a/src/main/java/net/minecraft/server/players/UserCache.java b/src/main/java/net/minecraft/server/players/UserCache.java
index 7ce5bd130441a3bc32ee5fa3630edce23dadd0b8..5a0964538f56b3b64f74e178dfa8efcb8c3c2239 100644
--- a/src/main/java/net/minecraft/server/players/UserCache.java
+++ b/src/main/java/net/minecraft/server/players/UserCache.java
@@ -96,11 +96,12 @@ public class UserCache {
             }
         };
 
-        if (com.destroystokyo.paper.PaperConfig.isProxyOnlineMode()) // Paper - only run in online mode - 100 COL
+        if (!org.apache.commons.lang3.StringUtils.isBlank(s) && // Tuinity - Moved up
+                com.destroystokyo.paper.PaperConfig.isProxyOnlineMode()) // Paper - only run in online mode - 100 COL
         gameprofilerepository.findProfilesByNames(new String[]{s}, Agent.MINECRAFT, profilelookupcallback);
         GameProfile gameprofile = (GameProfile) atomicreference.get();
 
-        if (!c() && gameprofile == null && !org.apache.commons.lang3.StringUtils.isBlank(s)) { // Paper - Don't lookup a profile with a blank name
+        if (!c() && gameprofile == null) { // Paper - Don't lookup a profile with a blank name // Tuinity - Move up
             UUID uuid = EntityHuman.a(new GameProfile((UUID) null, s));
 
             gameprofile = new GameProfile(uuid, s);
@@ -134,6 +135,18 @@ public class UserCache {
         return this.h.incrementAndGet();
     }
 
+    // Paper start
+    @Nullable public GameProfile getProfileIfCached(String name) {
+        try { this.stateLock.lock(); // Tuinity - allow better concurrency
+        UserCache.UserCacheEntry entry = this.nameCache.get(name.toLowerCase(Locale.ROOT));
+        if (entry == null)
+            return null;
+        entry.a(this.d());
+        return entry.getProfile();
+        } finally { this.stateLock.unlock(); } // Tuinity - allow better concurrency
+    }
+    // Paper end
+
     @Nullable
     public GameProfile getProfile(String s) { // Paper - synchronize // Tuinity start - allow better concurrency
         String s1 = s.toLowerCase(Locale.ROOT);
@@ -151,9 +164,9 @@ public class UserCache {
         GameProfile gameprofile;
 
         if (usercache_usercacheentry != null) {
-            stateLocked = false; this.stateLock.unlock(); // Tuinity - allow better concurrency
-            usercache_usercacheentry.a(this.d());
+            usercache_usercacheentry.a(this.d()); // Tuinity -moved up
             gameprofile = usercache_usercacheentry.a();
+            stateLocked = false; this.stateLock.unlock(); // Tuinity - allow better concurrency
         } else {
             stateLocked = false; this.stateLock.unlock(); // Tuinity - allow better concurrency
             try { this.lookupLock.lock(); // Tuinity - allow better concurrency
@@ -174,14 +187,16 @@ public class UserCache {
     }
 
     // Paper start
+    /* Tuinity - Moved up
     @Nullable public GameProfile getProfileIfCached(String name) {
         UserCache.UserCacheEntry entry = this.nameCache.get(name.toLowerCase(Locale.ROOT));
         return entry == null ? null : entry.getProfile();
-    }
+    }*/ // Tuinity - Moved up
     // Paper end
 
     @Nullable
     public GameProfile getProfile(UUID uuid) {
+        try { this.stateLock.lock(); // Tuinity - allow better concurrency
         UserCache.UserCacheEntry usercache_usercacheentry = (UserCache.UserCacheEntry) this.d.get(uuid);
 
         if (usercache_usercacheentry == null) {
@@ -190,6 +205,7 @@ public class UserCache {
             usercache_usercacheentry.a(this.d());
             return usercache_usercacheentry.a();
         }
+        } finally { this.stateLock.unlock(); } // Tuinity - allow better concurrency
     }
 
     private static DateFormat e() {
